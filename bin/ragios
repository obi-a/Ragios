#!/usr/bin/env ruby
require "thor"

class RagiosCLI < Thor
  no_commands do
    def ragios_dir
      @ragios_dir ||= File.expand_path(File.join(File.dirname(__FILE__), '..'))
    end
  end

  desc "console", "Load Ragios into PRY REPL"
  def console
    ragios_lib = "#{ragios_dir}/lib/ragios"
    irb = "bundle exec pry -r #{ragios_lib}"
    exec(irb)
  end

  desc "server start | restart | stop", "Deprecated"
  def server(option=nil)
   puts "`ragios server` command is Deprecated use `ragios web` to start the web service"
  end

  desc "jobs start | restart | stop", "Run Ragios Jobs Service"
  def jobs(option=nil)
    cmd = "./bin/jobs"
    exec(cmd)
  end

  desc "web start | restart | stop", "Run Ragios Web Service"
  long_desc %q(
    `web` will start, restart or stop Ragios web service.

    > $ ragios web start
  )
  def web(option=nil)
    exec('bundle exec pumactl -F server.rb start') if option == 'start'
    if option == 'restart'
      puts "Restarting Ragios Web Service..."
      exec('bundle exec pumactl -F server.rb restart')
    end
    if option == 'stop'
      puts "Stopping Ragios Web Service..."
      exec('bundle exec pumactl -F server.rb stop')
    end
    if option == 'phased-restart'
      puts "Ragios Web Service phased-restart in progress..."
      exec('bundle exec pumactl -F server.rb phased-restart -p tmp/pids/puma.pid')
    end

    puts "Usage: ragios web start | stop | restart | phased-restart"
  end

end

RagiosCLI.start(ARGV)
